--[[

	Name : LCv2
	Creator : LuaQuack (presumably)

	Converted by TypicaalUsername

	Description : slop. removal of my credits is frowned upon btw

	Made for Empyrean Reanimation.

	LONG LIVE MICHELLE
	LONG LIVE FLYGOD

	Contact me on discord at : typicalusername_
	Roblox : freshmen or TWG2

]]--

--// Keep in mind, I do not like this community.
--// I came back to make one or two slop things and call it a day from there. You are all skids in my eyes.

task.spawn(error,"this script was carelessly written and converted. i do not care if it doesnt work for you. go whine to your other skid friends or do it yourself.")
task.spawn(error,"my name ken carson im from atlanta")

--/\     Script     /\--
Animation_Speed = 3
IT = Instance.new
CF = CFrame.new
VT = Vector3.new
RAD = math.rad
C3 = Color3.new
UD2 = UDim2.new
BRICKC = BrickColor.new
ANGLES = CFrame.Angles
EULER = CFrame.fromEulerAnglesXYZ
COS = math.cos
ACOS = math.acos
SIN = math.sin
ASIN = math.asin
ABS = math.abs
MRANDOM = math.random
FLOOR = math.floor
radian = math.rad
random = math.random
Vec3 = Vector3.new
Inst = Instance.new
cFrame = CFrame.new
Euler = CFrame.fromEulerAnglesXYZ
vt = Vector3.new
bc = BrickColor.new
br = BrickColor.random
it = Instance.new
cf = CFrame.new
angles = CFrame.Angles
Cf = CFrame.new
Cos = math.cos
Sin = math.sin
Abs = math.abs
Rad = math.rad
V3 = {N=Vector3.new,FNI=Vector3.FromNormalId,A=Vector3.FromAxis}
M = {C=math.cos,R=math.rad,S=math.sin,P=math.pi,RNG=math.random,MRS=math.randomseed,H=math.huge,RRNG = function(min,max,div) return math.rad(math.random(min,max)/(div or 1)) end}
R3 = {N=Region3.new}
local ROOTC0 = CF(0, 0, 0) * ANGLES(RAD(-90), RAD(0), RAD(180))
local NECKC0 = CF(0, 1, 0) * ANGLES(RAD(-90), RAD(0), RAD(180))
local RIGHTSHOULDERC0 = CF(-0.5, 0, 0) * ANGLES(RAD(0), RAD(90), RAD(0))
local LEFTSHOULDERC0 = CF(0.5, 0, 0) * ANGLES(RAD(0), RAD(-90), RAD(0))
local rc0 = CFrame.new() * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180))
local nc0 = CFrame.new(0,1,0) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(180))
local rscp = CFrame.new(-.5,0,0) * CFrame.Angles(math.rad(0),math.rad(90),math.rad(0))
local lscp = CFrame.new(.5,0,0) * CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0))
local Name = script.Name
local Player,Backups,obamagaming = game.Players.LocalPlayer,{},{}

do
	local Shard = Instance.new("Part")
	Shard.Name = "Shard"
	Shard.CFrame = CFrame.new(116.23797607421875, 1234.0028076171875, 232.19789123535156)
	Shard.Color = Color3.fromRGB(0, 0, 0)
	Shard.Reflectance = -1
	Shard.Material = Enum.Material.Glass
	Shard.Size = Vector3.new(0.27778005599975586, 1, 0.27700042724609375)
	Shard.Anchored = true

	local Mesh = Instance.new("SpecialMesh")
	Mesh.MeshId = "rbxassetid://6586643839"
	Mesh.MeshType = Enum.MeshType.FileMesh
	Mesh.Parent = Shard
	
	Backups.Shard = Shard
end

local function makefakeevent()
	local cbind = Instance.new("BindableEvent")
	local sbind = Instance.new("BindableEvent")
	return {
		OnClientEvent = cbind.Event;
		OnServerEvent = sbind.Event;
		FireClient = function(_,...)
			local args = {...}
			table.remove(args,1)
			cbind:Fire(unpack(args))
		end,
		FireAllClients = function(...)
			local args = {...}
			table.remove(args,1)
			cbind:Fire(unpack(args))
		end,
		FireServer = function(...)
			local args = {...}
			table.remove(args,1)
			sbind:Fire(Player,unpack(args))
		end,
	}
end

local script = Instance.new("LocalScript")
function obamagaming.obunga(a,b,t)
	return a:Lerp(b,math.clamp(t,0,1))
end
obamagaming["me when the"] = function(Weld,Part1,Part0)
	return Part0*(Weld.C0*Weld.C1:Inverse())
end
local function RandomString(Length)
	return game:GetService("HttpService"):GenerateGUID(false)
end

local Success,CreatorName = pcall(game:GetService("Players").GetNameFromUserIdAsync,game:GetService("Players"),1323362054)
if Success then
	CreatorName = CreatorName.." aka DARK_P0LIG0Nalt"
else
	CreatorName = "DARK_P0LIG0Nalt"
end
local Instance_ = Instance.new
local Instance = {}
function Instance.new(ClassType,Parent,Properties)
	local NewInstance
	if typeof(Backups[ClassType]) == "Instance" then
		NewInstance = Backups[ClassType]:Clone()
	else
		NewInstance = Instance_(ClassType)
	end
	if type(Properties) == "table" then
		for i,v in pairs(Properties) do
			NewInstance[i] = v
		end
	end
	if typeof(Parent) == "Instance" then
		NewInstance.Parent = Parent
	end
	return NewInstance
end
local Running,Character,CharacterProps,Event,RemoteKey,LastCall,HBevent,tf,fr,Music,MusicProps,MusicStart,Welds,CFrames,Movement,Sine,BlacklistedGuis,Services,PartClasses,RemoteName,Psheudonym,AntiFat,Color,MusicHolder,Mode,PlaybackLoudness,Mouse,WorldModels,BlacklistedPlayers,GuestKey,MessagesToSend = true,{HumanoidRootPart = {CFrame = CFrame.new()},GunHandle = {CFrame = CFrame.new()},Hole = {CFrame = CFrame.new()},Hole2 = {CFrame = CFrame.new()}},{Head = {Material = Enum.Material.Glass,Reflectance = -1,Transparency = 0,Name = "Head",Anchored = true,Size = Vector3.new(1.36,1.25,1.2)},Torso = {Color = Color3.new(),Material = Enum.Material.Glass,Reflectance = -1,TextureID = "",Transparency = 0,Name = "Torso",Anchored = true,Size = Vector3.new(2,2,1)},RightArm = {Color = Color3.new(),Material = Enum.Material.Glass,Reflectance = -1,TextureID = "",Transparency = 0,Name = "Limb",Anchored = true,Size = Vector3.new(1,2,1)},LeftArm = {Color = Color3.new(),Material = Enum.Material.Glass,Reflectance = -1,TextureID = "",Transparency = 0,Name = "Limb",Anchored = true,Size = Vector3.new(1,2,1)},RightLeg = {Color = Color3.new(),Material = Enum.Material.Glass,Reflectance = -1,TextureID = "",Transparency = 0,Name = "Limb",Anchored = true,Size = Vector3.new(1,2,1)},LeftLeg = {Color = Color3.new(),Material = Enum.Material.Glass,Reflectance = -1,TextureID = "",Transparency = 0,Name = "Limb",Anchored = true,Size = Vector3.new(1,2,1)},Hair = {Color = Color3.new(),Material = Enum.Material.Glass,Reflectance = -1,TextureID = "",Transparency = 0,Name = "Hair",Anchored = true,Size = Vector3.new(1.77,1.55,1.45)},HeadGlow = {Material = Enum.Material.Neon,Transparency = 0,Name = "HeadGlow",Anchored = true,Size = Vector3.new(1.34,1.23,1.18)},GunBase = {Color = Color3.new(),Material = Enum.Material.Glass,Reflectance = -1,TextureID = "",Transparency = 0,Name = "GunBase",Anchored = true,Size = Vector3.new(9.361,8.617,1.474)},GunGlow = {Material = Enum.Material.Neon,Transparency = 0,Name = "GunGlow",Anchored = true,Size = Vector3.new(2.002,2.215,8.928)},GunAdditions = {Color = Color3.new(),Material = Enum.Material.Glass,Reflectance = -1,Transparency = 0,Name = "GunAdditions",Anchored = true,Size = Vector3.new(5.498,2.188,1.207)},RightWing = {Color = Color3.new(),Material = Enum.Material.Glass,Reflectance = -1,TextureID = "",Transparency = 0,Name = "RightWing",Anchored = true,Size = Vector3.new(2.398,4.324,1.922)},LeftWing = {Color = Color3.new(),Material = Enum.Material.Glass,Reflectance = -1,TextureID = "",Transparency = 0,Name = "LeftWing",Anchored = true,Size = Vector3.new(2.398,4.324,1.922)}},nil,RandomString(),tick(),Instance.new("BindableEvent"),0,1/60,nil,{Looped = true,PlaybackSpeed = 1,Playing = true,RollOffMaxDistance = 250,RollOffMinDistance = 25,RollOffMode = Enum.RollOffMode.Linear,SoundId = "rbxassetid://2092660225",Volume = 1,PlayOnRemove = false},tick(),{Defaults = {Neck = {C0 = CFrame.new(0,1,0)*CFrame.Angles(math.rad(-90),0,math.rad(180))},RootJoint = {C0 = CFrame.new()*CFrame.Angles(math.rad(-90),0,math.rad(180))},RightShoulder = {C0 = CFrame.new(-.5,0,0)*CFrame.Angles(0,math.rad(90),0)},LeftShoulder = {C0 = CFrame.new(.5,0,0)*CFrame.Angles(0,math.rad(-90),0)}},Neck = {C0 = CFrame.new(),C1 = CFrame.new(0,-.5,0,-1,0,0,0,0,1,0,1,0)},RootJoint = {C0 = CFrame.new(),C1 = CFrame.new(0,0,0,-1,0,0,0,0,1,0,1,0)},RightShoulder = {C0 = CFrame.new(),C1 = CFrame.new(-.5,.5,0,0,0,1,0,1,0,-1,0,0)},LeftShoulder = {C0 = CFrame.new(),C1 = CFrame.new(.5,.5,0,0,0,-1,0,1,0,1,0,0)},RightHip = {C0 = CFrame.new(),C1 = CFrame.new(.5,1,0,0,0,1,0,1,0,-1,0,0)},LeftHip = {C0 = CFrame.new(),C1 = CFrame.new(-.5,1,0,0,0,-1,0,1,0,1,0,0)},None = {C0 = CFrame.new(),C1 = CFrame.new()},Hair = {C0 = CFrame.new(.16,.5,0)*CFrame.Angles(0,math.rad(180),0),C1 = CFrame.new()},GunJoint = {C0 = CFrame.new(.05,-1,-.15)*CFrame.Angles(math.rad(-90),0,0),C1 = CFrame.new()},GunBase = {C0 = CFrame.new(0,1.305,-2.108)*CFrame.Angles(0,math.rad(-90),math.rad(-45)),C1 = CFrame.new()},GunGlow = {C0 = CFrame.new(-.024,1.369,-1.26)*CFrame.Angles(0,0,math.rad(-140.59)),C1 = CFrame.new()},GunAdditions = {C0 = CFrame.new(-.004,1.204,.505)*CFrame.Angles(0,math.rad(-90),0),C1 = CFrame.new()},Hole = {C0 = CFrame.new(-.001,1.538,-3.342)*CFrame.Angles(0,math.rad(-90),0),C1 = CFrame.new()},Hole2 = {C0 = CFrame.new(-.001,1.538,-9.142),C1 = CFrame.new()},RightWing = {C0 = CFrame.new(.15,.5,.5)*CFrame.Angles(0,math.rad(90),0),C1 = CFrame.new(1.1,1,-.75)},LeftWing = {C0 = CFrame.new(-.15,.5,.5)*CFrame.Angles(0,math.rad(90),0),C1 = CFrame.new(1.1,1,.75)}},{},{CFrame = CFrame.new(),PotentialCFrame = CFrame.new(),HipHeight = 3,WalkSpeed = 50},0,{"vbucks","sup","AllahGui","SnakeVenomSS","polishtoilet","nooties","IY_GUI","IY_JumpScare","BugGui","tyrone"},{"SoundService","Chat","MarketplaceService","Players","StarterPlayer","LocalizationService","JointsService","FriendService","InsertService","Lighting","Teams","ReplicatedStorage","TestService","ProximityPromptService"},{"CornerWedgePart","Part","FlagStand","WedgePart","NegateOperation","UnionOperation","PartOperation","TrussPart","MeshPart","Seat","SpawnLocation"},RandomString(),string.sub(RandomString(),25),false,Color3.new(),nil,0,0,{Hit = CFrame.new()},{},{},RandomString(),{}

local function wait(num)
	if type(num) ~= "number" or num <= fr then
		HBevent.Event:Wait()
	else
		for _ = 1,num*60 do
			HBevent.Event:Wait()
		end
	end
end
local function Refit(Instance,Parent)

end
local function SendMessage(StarterText,Text)

end

local function Clerp(a,b,t)
	return a:Lerp(b,math.clamp(t,0,1))
end
local function UpdateWeld(Weld,Part1,Part0)
	return Part0*(Weld.C0*Weld.C1:Inverse())
end

coroutine.resume(coroutine.create(function()
	while Running do
		if Mode == -1 then
			Welds.GunJoint.C0 = Clerp(Welds.GunJoint.C0,CFrame.new(.05,-1,-.15)*CFrame.Angles(math.rad(-90),0,0),.25)
			Welds.RightWing.C0 = Clerp(Welds.RightWing.C0,CFrame.new(.15,.5,.5)*CFrame.Angles(0,math.rad(105-25*math.cos(Sine/25)),0),.25)
			Welds.LeftWing.C0 = Clerp(Welds.LeftWing.C0,CFrame.new(-.15,.5,.5)*CFrame.Angles(0,math.rad(75+25*math.cos(Sine/25)),0),.25)
		elseif Mode == 0 then
			if Movement.Walking then
				Welds.GunJoint.C0 = Clerp(Welds.GunJoint.C0,CFrame.new(.05,-1,-.15) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(0)),1/2)
				Welds.RootJoint.C0 = Clerp(Welds.RootJoint.C0,ROOTC0*CFrame.new(0,0,0 - .5 * math.sin(Sine/12))*CFrame.Angles(math.rad(40-1*math.cos(Sine/12)),0,0),.25)
				Welds.Neck.C0 = Clerp(Welds.Neck.C0,NECKC0*CFrame.new(0,-.25,0)*CFrame.Angles(math.rad(-40),0,0),.25)
				Welds.RightShoulder.C0 = Clerp(Welds.RightShoulder.C0, CFrame.new(1.55, 0.5, 0.5) * CFrame.Angles(math.rad(250), math.rad(20), math.rad(-80))* RIGHTSHOULDERC0, 1 / 3)
				Welds.LeftShoulder.C0 = Clerp(Welds.LeftShoulder.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(-45),0,math.rad(-5-2*math.cos(Sine/19)))*LEFTSHOULDERC0,.25)
				Welds.RightHip.C0 = Clerp(Welds.RightHip.C0,CFrame.new(1,-0.5,-0.5) * CFrame.Angles(math.rad(-5 + 9 * math.cos(Sine/12)),math.rad(80),math.rad(0)),0.7/3)
				Welds.LeftHip.C0 = Clerp(Welds.LeftHip.C0,CFrame.new(-1,-1,0) * CFrame.Angles(math.rad(-9 + 9 * math.cos(Sine/12)),math.rad(-80),math.rad(0)),0.7/3)
			else
				Welds.GunJoint.C0 = Clerp(Welds.GunJoint.C0,CFrame.new(.05,-1,-.15) * CFrame.Angles(math.rad(-120+5*math.cos(Sine/12)),math.rad(0),math.rad(0)),1/2)
				Welds.RootJoint.C0 = Clerp(Welds.RootJoint.C0,ROOTC0*CFrame.new(0,0,0 - .5 * math.sin(Sine/12))*CFrame.Angles(math.rad(-25-5*math.cos(Sine/12)),0,0),.7/3)
				Welds.Neck.C0 = Clerp(Welds.Neck.C0,NECKC0*CFrame.new(0,0 ,0 + ((1) - 1)) * CFrame.Angles(math.rad(30-1*math.cos(Sine/12)),math.rad(0),math.rad(0)),0.7/3)
				Welds.RightShoulder.C0 = Clerp(Welds.RightShoulder.C0,CFrame.new(1.55, 0.5, 0.5) * CFrame.Angles(math.rad(250), math.rad(20), math.rad(-80))* RIGHTSHOULDERC0, 1 / 3)
				Welds.LeftShoulder.C0 = Clerp(Welds.LeftShoulder.C0,CFrame.new(-1.5,0.5,0) * CFrame.Angles(math.rad(-20 + 8.5 * math.cos(Sine/12)),math.rad(0),math.rad(-25 - 5 * math.cos(Sine/12))) * LEFTSHOULDERC0,0.7/3)
				Welds.RightHip.C0 = Clerp(Welds.RightHip.C0,CFrame.new(1,-0.5,-0.5) * CFrame.Angles(math.rad(-5 + 9 * math.cos(Sine/12)),math.rad(80),math.rad(0)),0.7/3)
				Welds.LeftHip.C0 = Clerp(Welds.LeftHip.C0,CFrame.new(-1,-1,0) * CFrame.Angles(math.rad(13 + 9 * math.cos(Sine/12)),math.rad(-80),math.rad(0)),0.7/3)
			end
			Welds.RightWing.C0 = Clerp(Welds.RightWing.C0,CFrame.new(.15,.5,.5)*CFrame.Angles(0,math.rad(105-25*math.cos(Sine/17)),0),.25)
			Welds.LeftWing.C0 = Clerp(Welds.LeftWing.C0,CFrame.new(-.15,.5,.5)*CFrame.Angles(0,math.rad(75+25*math.cos(Sine/17)),0),.25)
		elseif Mode == 1 then
			if Movement.Walking then
				Welds.RootJoint.C0 = Clerp(Welds.RootJoint.C0,Welds.Defaults.RootJoint.C0*CFrame.new(0,0,-.5*math.sin(Sine/50))*CFrame.Angles(math.rad(20),0,0),.25)
				Welds.Neck.C0 = Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0,.25)
				Welds.RightShoulder.C0 = Clerp(Welds.RightShoulder.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(-41.6-4*math.sin(Sine/50)),0,0)*Welds.Defaults.RightShoulder.C0,.25)
				Welds.LeftShoulder.C0 = Clerp(Welds.LeftShoulder.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(20),0,math.rad(-10-10*math.sin(Sine/50)))*Welds.Defaults.LeftShoulder.C0,.25)
				Welds.RightHip.C0 = Clerp(Welds.RightHip.C0,CFrame.new(1,-1,-.01)*CFrame.Angles(math.rad(-20),math.rad(80),math.rad(10+10*math.sin(Sine/50))),.25)
				Welds.LeftHip.C0 = Clerp(Welds.LeftHip.C0,CFrame.new(-1,-1,-.01)*CFrame.Angles(math.rad(-10),math.rad(-80),math.rad(-10-10*math.sin(Sine/50))),.25)
			else
				Welds.RootJoint.C0 = Clerp(Welds.RootJoint.C0,Welds.Defaults.RootJoint.C0*CFrame.new(0,0,-.5*math.sin(Sine/50))*CFrame.Angles(math.rad(20),0,0),.25)
				if Movement.NeckSnap then
					Welds.Neck.C0 = Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0*CFrame.Angles(math.rad(20),math.rad(10*math.sin(Sine/100)),0),1)
					Movement.NeckSnap = false
				else
					Welds.Neck.C0 = Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0*CFrame.Angles(math.rad(20),math.rad(10*math.sin(Sine/100)),0),.25)
				end
				pcall(function()
					if math.random(1,60) == 1 then
						Welds.Neck.C0 = Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0*CFrame.Angles(math.rad(20+math.random(-20,20)),math.rad((10*math.sin(Sine/100))+math.random(-20,20)),math.rad(math.random(-20,20))),1)
						Movement.NeckSnap = true
					end
				end)
				Welds.RightShoulder.C0 = Clerp(Welds.RightShoulder.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(-41.6-4*math.sin(Sine/50)),0,0)*Welds.Defaults.RightShoulder.C0,.25)
				Welds.LeftShoulder.C0 = Clerp(Welds.LeftShoulder.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(20),0,math.rad(-10-10*math.sin(Sine/50)))*Welds.Defaults.LeftShoulder.C0,.25)
				Welds.RightHip.C0 = Clerp(Welds.RightHip.C0,CFrame.new(1,-1,-.01)*CFrame.Angles(math.rad(10),math.rad(80),math.rad(10*math.sin(Sine/50))),.25)
				Welds.LeftHip.C0 = Clerp(Welds.LeftHip.C0,CFrame.new(-1,-1,-.01)*CFrame.Angles(math.rad(20),math.rad(-80),math.rad(-10*math.sin(Sine/50))),.25)
			end
			Welds.GunJoint.C0 = Clerp(Welds.GunJoint.C0,CFrame.new(.05,-1,-.15)*CFrame.Angles(math.rad(-90),0,0),.25)
			Welds.RightWing.C0 = Clerp(Welds.RightWing.C0,CFrame.new(.15,.5,.5)*CFrame.Angles(0,math.rad(105-25*math.cos(Sine/25)),0),.25)
			Welds.LeftWing.C0 = Clerp(Welds.LeftWing.C0,CFrame.new(-.15,.5,.5)*CFrame.Angles(0,math.rad(75+25*math.cos(Sine/25)),0),.25)
		elseif Mode == 2 then
			if Movement.Walking then
				Welds.RootJoint.C0 = Clerp(Welds.RootJoint.C0,Welds.Defaults.RootJoint.C0*CFrame.new(0,0,0+.5*math.cos(Sine/15))*CFrame.Angles(math.rad(40),math.rad(-5*math.cos(Sine/30)),0),.25)
				Welds.Neck.C0 = Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0*CFrame.new(0,-.25,0)*CFrame.Angles(math.rad(-40),0,0),.25)
				Welds.RightShoulder.C0 = Clerp(Welds.RightShoulder.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(-45),0,math.rad(5+2*math.cos(Sine/19)))*Welds.Defaults.RightShoulder.C0,.25)
				Welds.LeftShoulder.C0 = Clerp(Welds.LeftShoulder.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(-45),0,math.rad(-5-2*math.cos(Sine/19)))*Welds.Defaults.LeftShoulder.C0,.25)
				Welds.RightHip.C0 = Clerp(Welds.RightHip.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-20+9*math.cos(Sine/74)),math.rad(80),0)*CFrame.Angles(math.rad(0+5*math.cos(Sine/37)),0,0),.25)
				Welds.LeftHip.C0 = Clerp(Welds.LeftHip.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-20-9*math.cos(Sine/54)),math.rad(-80),0)*CFrame.Angles(math.rad(-5*math.cos(Sine/41)),0,0),.25)
			else
				Welds.RootJoint.C0 = Clerp(Welds.RootJoint.C0,Welds.Defaults.RootJoint.C0*CFrame.new(0,0,.5*math.cos(Sine/15))*CFrame.Angles(0,math.rad(-10*math.cos(Sine/30)),0),.25)
				Welds.Neck.C0 = Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0*CFrame.Angles(0,math.rad(-15*math.cos(Sine/30)),0),.25)
				Welds.RightShoulder.C0 = Clerp(Welds.RightShoulder.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(135+-15*math.cos(Sine/30)),0,math.rad(25+15*math.cos(Sine/30)))*Welds.Defaults.RightShoulder.C0,.25)
				Welds.LeftShoulder.C0 = Clerp(Welds.LeftShoulder.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(5),math.rad(5),math.rad(-10+15*math.cos(Sine/30)))*Welds.Defaults.LeftShoulder.C0,.25)
				Welds.RightHip.C0 = Clerp(Welds.RightHip.C0,CFrame.new(1,-1,-.01)*CFrame.Angles(math.rad(-10),math.rad(80),math.rad(10+10*math.sin(Sine/15))),.25)
				Welds.LeftHip.C0 = Clerp(Welds.LeftHip.C0,CFrame.new(-1,-1,-.01)*CFrame.Angles(0,math.rad(-80),math.rad(-10-10*math.sin(Sine/15))),.25)
			end
			Welds.GunJoint.C0 = Clerp(Welds.GunJoint.C0,CFrame.new(.05,-1,-.15)*CFrame.Angles(math.rad(-90),0,0),.25)
			Welds.RightWing.C0 = Clerp(Welds.RightWing.C0,CFrame.new(.15,.5,.5)*CFrame.Angles(0,math.rad(105-25*math.cos(Sine/25)),0),.25)
			Welds.LeftWing.C0 = Clerp(Welds.LeftWing.C0,CFrame.new(-.15,.5,.5)*CFrame.Angles(0,math.rad(75+25*math.cos(Sine/25)),0),.25)
		elseif Mode == 3 then
			if Movement.Walking then
				Welds.RootJoint.C0 = Clerp(Welds.RootJoint.C0,Welds.Defaults.RootJoint.C0*CFrame.new(0,0,.5*math.cos(Sine/15))*CFrame.Angles(math.rad(20-2.5*math.sin(Sine/15)),0,0),.25)
				Welds.Neck.C0 = Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0*CFrame.Angles(math.rad(-10-10*math.sin(Sine/15)),0,0),.25)
				Welds.RightShoulder.C0 = Clerp(Welds.RightShoulder.C0,CFrame.new(1.5,.5+.25*math.sin(Sine/15),0)*CFrame.Angles(math.rad(-50+5*math.sin(Sine/15)),0,0)*Welds.Defaults.RightShoulder.C0,.25)
				Welds.LeftShoulder.C0 = Clerp(Welds.LeftShoulder.C0,CFrame.new(-1.5,.5+.25*math.sin(Sine/15),0)*CFrame.Angles(math.rad(110),0,0)*Welds.Defaults.LeftShoulder.C0,.25)
				Welds.RightHip.C0 = Clerp(Welds.RightHip.C0,CFrame.new(1,-1,-.01)*CFrame.Angles(math.rad(-10),math.rad(80),math.rad(5+5*math.sin(Sine/15))),.25)
				Welds.LeftHip.C0 = Clerp(Welds.LeftHip.C0,CFrame.new(-1,-1,-.01)*CFrame.Angles(0,math.rad(-80),math.rad(-5-5*math.sin(Sine/15))),.25)
			else
				Welds.RootJoint.C0 = Clerp(Welds.RootJoint.C0,Welds.Defaults.RootJoint.C0*CFrame.new(0,0,.5*math.cos(Sine/15))*CFrame.Angles(math.rad(-2.5*math.sin(Sine/15)),0,0),.25)
				Welds.Neck.C0 = Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0*CFrame.Angles(math.rad(10-10*math.sin(Sine/15)),0,0),.25)
				Welds.RightShoulder.C0 = Clerp(Welds.RightShoulder.C0,CFrame.new(1.5,.5+.25*math.sin(Sine/15),0)*CFrame.Angles(math.rad(135+5*math.sin(Sine/15)),0,math.rad(25))*Welds.Defaults.RightShoulder.C0,.25)
				Welds.LeftShoulder.C0 = Clerp(Welds.LeftShoulder.C0,CFrame.new(-1.5,.5+.25*math.sin(Sine/15),0)*CFrame.Angles(0,0,math.rad(-10+10*math.cos(Sine/15)))*Welds.Defaults.LeftShoulder.C0,.25)
				Welds.RightHip.C0 = Clerp(Welds.RightHip.C0,CFrame.new(1,-1,-.01)*CFrame.Angles(math.rad(-10),math.rad(80),math.rad(5+5*math.sin(Sine/15))),.25)
				Welds.LeftHip.C0 = Clerp(Welds.LeftHip.C0,CFrame.new(-1,-1,-.01)*CFrame.Angles(0,math.rad(-80),math.rad(-5-5*math.sin(Sine/15))),.25)
			end
			Welds.GunJoint.C0 = Clerp(Welds.GunJoint.C0,CFrame.new(.05,-1,-.15)*CFrame.Angles(math.rad(-90),0,0),.25)
			Welds.RightWing.C0 = Clerp(Welds.RightWing.C0,CFrame.new(.15,.5,.5)*CFrame.Angles(0,math.rad(105-25*math.cos(Sine/25)),0),.25)
			Welds.LeftWing.C0 = Clerp(Welds.LeftWing.C0,CFrame.new(-.15,.5,.5)*CFrame.Angles(0,math.rad(75+25*math.cos(Sine/25)),0),.25)
		elseif Mode == 4 then
			if Movement.Walking then
				Welds.RootJoint.C0 = Clerp(Welds.RootJoint.C0,Welds.Defaults.RootJoint.C0*CFrame.new(0,math.cos(Sine/25),-math.sin(Sine/25))*CFrame.Angles(math.rad(5*math.sin(Sine/25)),0,math.rad(70)),.25)
				Welds.Neck.C0 = Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0*CFrame.Angles(0,0,math.rad(-70))*CFrame.Angles(math.rad(5*math.cos(Sine/25)),0,0),.25)
				Welds.RightShoulder.C0 = Clerp(Welds.RightShoulder.C0,CFrame.new(1,.5,-.25)*CFrame.Angles(0,math.rad(-10),math.rad(-90))*Welds.Defaults.RightShoulder.C0,.25)
				Welds.LeftShoulder.C0 = Clerp(Welds.LeftShoulder.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(0,0,math.rad(-20+5*math.sin(Sine/25)))*Welds.Defaults.LeftShoulder.C0,.25)
			else
				Welds.RootJoint.C0 = Clerp(Welds.RootJoint.C0,Welds.Defaults.RootJoint.C0*CFrame.new(0,math.cos(Sine/25),-math.sin(Sine/25))*CFrame.Angles(math.rad(5*math.sin(Sine/25)),0,0),.25)
				Welds.Neck.C0 = Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0*CFrame.Angles(math.rad(5*math.cos(Sine/25)),0,0),.25)
				Welds.RightShoulder.C0 = Clerp(Welds.RightShoulder.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(160),0,math.rad(15-5*math.sin(Sine/25)))*Welds.Defaults.RightShoulder.C0,.25)
				Welds.LeftShoulder.C0 = Clerp(Welds.LeftShoulder.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(0,0,math.rad(-15+5*math.sin(Sine/25)))*Welds.Defaults.LeftShoulder.C0,.25)
			end
			Welds.RightHip.C0 = Clerp(Welds.RightHip.C0,CFrame.new(1,-1-.1*math.sin(Sine/25),-.01)*CFrame.Angles(0,math.rad(80),0),.25)
			Welds.LeftHip.C0 = Clerp(Welds.LeftHip.C0,CFrame.new(-1,-.5-.25*math.sin(Sine/25),-.51)*CFrame.Angles(math.rad(-10),math.rad(-80),0),.25)
			Welds.GunJoint.C0 = Clerp(Welds.GunJoint.C0,CFrame.new(.05,-1,-.15)*CFrame.Angles(math.rad(-90),0,0),.25)
			Welds.RightWing.C0 = Clerp(Welds.RightWing.C0,CFrame.new(.15,.5,.5)*CFrame.Angles(0,math.rad(105-25*math.cos(Sine/25)),0),.25)
			Welds.LeftWing.C0 = Clerp(Welds.LeftWing.C0,CFrame.new(-.15,.5,.5)*CFrame.Angles(0,math.rad(75+25*math.cos(Sine/25)),0),.25)
		elseif Mode == 5 then
			if Movement.Walking then
				Welds.RootJoint.C0 = Clerp(Welds.RootJoint.C0,Welds.Defaults.RootJoint.C0*CFrame.new(0,.125*math.sin(Sine/12),0)*CFrame.Angles(math.rad(10-5*math.cos(Sine/12)),math.rad(-10*math.cos(Sine/12)),math.rad(-5*math.cos(Sine/12))),.25)
				Welds.Neck.C0 = Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0*CFrame.Angles(math.rad(10-5*math.cos(Sine/12)),math.rad(10*math.cos(Sine/12)),math.rad(5*math.cos(Sine/12))),.25)
				Welds.RightShoulder.C0 = Clerp(Welds.RightShoulder.C0,CFrame.new(1.5,.5+.2*math.sin(Sine/12),-.25)*CFrame.Angles(math.rad(165-15*math.cos(Sine/12)),math.rad(-10+5*math.sin(Sine/12)),math.rad(10))*Welds.Defaults.RightShoulder.C0,.25)
				Welds.LeftShoulder.C0 = Clerp(Welds.LeftShoulder.C0,CFrame.new(-1.5,.5-.15*math.cos(Sine/12),.5*math.sin(Sine/12))*CFrame.Angles(math.rad(-30*math.sin(Sine/12)),math.rad(5*math.cos(Sine/12)),0)*Welds.Defaults.LeftShoulder.C0,.25)
				Welds.RightHip.C0 = Clerp(Welds.RightHip.C0,CFrame.new(1,-.9-.2*math.cos(Sine/12),.5*math.sin(Sine/12))*CFrame.Angles(math.rad(-10-40*math.sin(Sine/12)),math.rad(90+5*math.cos(Sine/12)),math.rad(2.5*math.cos(Sine/12))),.25)
				Welds.LeftHip.C0 = Clerp(Welds.LeftHip.C0,CFrame.new(-1,-.9+.2*math.cos(Sine/12),-.5*math.sin(Sine/12))*CFrame.Angles(math.rad(-10+40*math.sin(Sine/12)),math.rad(-90+5*math.cos(Sine/12)),math.rad(2.5*math.cos(Sine/12))),.25)
				Welds.GunJoint.C0 = Clerp(Welds.GunJoint.C0,CFrame.new(.05,-1,-.15)*CFrame.Angles(math.rad(-90),0,0),.25)
			else
				Welds.RootJoint.C0 = Clerp(Welds.RootJoint.C0,Welds.Defaults.RootJoint.C0*CFrame.new(0,0,.05*math.cos(Sine/12))*CFrame.Angles(math.rad(15),0,0),.25)
				Welds.Neck.C0 = Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0*CFrame.Angles(math.rad(-15-3*math.cos(Sine/12)),math.rad(5-5*math.sin(Sine/12)),0),.25)
				Welds.RightShoulder.C0 = Clerp(Welds.RightShoulder.C0,CFrame.new(1.5,.5+0.1*math.cos(Sine/12),0)*CFrame.Angles(math.rad(-53.75+1.75*math.cos(Sine/12)),0,math.rad(5))*Welds.Defaults.RightShoulder.C0,.25)
				Welds.LeftShoulder.C0 = Clerp(Welds.LeftShoulder.C0,CFrame.new(-1.5,.5+.1*math.sin(Sine/12),0)*CFrame.Angles(math.rad(15),0,math.rad(-5+5*math.cos(Sine/12)))*Welds.Defaults.LeftShoulder.C0,.25)
				Welds.RightHip.C0 = Clerp(Welds.RightHip.C0,CFrame.new(1,-1-.05*math.cos(Sine/12),-.01)*CFrame.Angles(math.rad(10),math.rad(80),math.rad(0)),.25)
				Welds.LeftHip.C0 = Clerp(Welds.LeftHip.C0,CFrame.new(-1,-1-.05*math.cos(Sine/12),-.01)*CFrame.Angles(math.rad(20),math.rad(-80),math.rad(0)),.25)
				Welds.GunJoint.C0 = Clerp(Welds.GunJoint.C0,CFrame.new(.05,-1,-.15)*CFrame.Angles(math.rad(-106.3-.9*math.cos(Sine/12)),0,0),.25)
			end
			Welds.RightWing.C0 = Clerp(Welds.RightWing.C0,CFrame.new(.15,.5,.5)*CFrame.Angles(0,math.rad(105),0),.25)
			Welds.LeftWing.C0 = Clerp(Welds.LeftWing.C0,CFrame.new(-.15,.5,.5)*CFrame.Angles(0,math.rad(75),0),.25)
		elseif Mode == 6 then
			if Movement.Walking then
				if math.random(1,60) == 1 then
					Welds.Neck.C0 = Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0*CFrame.Angles(math.rad(math.random(500,500)), math.rad(math.random(500,500)), math.rad(math.random(500,500))), 1)
				end
				Welds.RootJoint.C0 = Clerp(Welds.RootJoint.C0,Welds.Defaults.RootJoint.C0 * CFrame.new(0 , 0 , 0 - .5 * math.sin(Sine/25)) * CFrame.Angles(math.rad(20), math.rad(0), math.rad(0)), 0.8 / 3)
				Welds.Neck.C0 = Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0 * CFrame.new(0,0 ,0 + ((1) - 1)) * CFrame.Angles(math.rad(0+math.random(-1,1)),math.rad(0+math.random(-1,1)),math.rad(0+math.random(-1,1))),0.7/3)
				Welds.RightShoulder.C0 = Clerp(Welds.RightShoulder.C0, CFrame.new(1.5, 0.5, 0) * CFrame.Angles(math.rad(-41.6-4*math.sin(Sine/25)), math.rad(math.random(-0.25,3)), math.rad(math.random(0.25,3)))* RIGHTSHOULDERC0, .7 / 3)
				Welds.LeftShoulder.C0 = Clerp(Welds.LeftShoulder.C0, CFrame.new(-1.5, 0.5, 0) * CFrame.Angles(math.rad(90-4*math.sin(Sine/25)), math.rad(5+2* math.sin(Sine/25+math.random(-0.25,3))), math.rad(-2+5*math.sin(Sine / 25))) * LEFTSHOULDERC0, .7 / 3)
				Welds.RightHip.C0 = Clerp(Welds.RightHip.C0, CFrame.new(1, -1, 0) * CFrame.Angles(math.rad(-30-4*math.sin(Sine/25-math.random(0.25,3))), math.rad(80), math.rad(0)), .7 / 3)
				Welds.LeftHip.C0 = Clerp(Welds.LeftHip.C0, CFrame.new(-1, -1 , 0) * CFrame.Angles(math.rad(-20-4*math.sin(Sine/25-math.random(-0.25,3))), math.rad(-80), math.rad(0)), .7 / 3)
				Welds.GunJoint.C0 = Clerp(Welds.GunJoint.C0,CFrame.new(.05,-1,-.15)*CFrame.Angles(math.rad(-106.3-.9*math.cos(Sine/12)),0,0),.25)
			else
				if math.random(1,60) == 1 then
					Welds.Neck.C0 = Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0*CFrame.Angles(math.rad(math.random(500,500)), math.rad(math.random(500,500)), math.rad(math.random(500,500))), 1)
				end
				Welds.RootJoint.C0 = Clerp(Welds.RootJoint.C0,Welds.Defaults.RootJoint.C0*CFrame.new(0 , 0 , 0 - .5 * math.sin(Sine/25)) * CFrame.Angles(math.rad(20), math.rad(0), math.rad(0)), 0.8 / 3)
				Welds.Neck.C0 = Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0 * CFrame.new(0,0 ,0 + ((1) - 1)) * CFrame.Angles(math.rad(20+math.random(-1,1)),math.rad(0+math.random(-1,1)),math.rad(0+math.random(-1,1))),0.7/3)
				Welds.RightShoulder.C0 = Clerp(Welds.RightShoulder.C0,CFrame.new(1.5, 0.5, 0) * CFrame.Angles(math.rad(-41.6-4*math.sin(Sine/25)), math.rad(math.random(-0.25,3)), math.rad(math.random(0.25,3)))* RIGHTSHOULDERC0, .7 / 3)
				Welds.LeftShoulder.C0 = Clerp(Welds.LeftShoulder.C0,CFrame.new(-1.5, 0.5, 0) * CFrame.Angles(math.rad(20), math.rad(5+2* math.sin(Sine/25+math.random(-0.25,3))), math.rad(-2+5*math.sin(Sine / 25))) * LEFTSHOULDERC0, .7 / 3)
				Welds.RightHip.C0 = Clerp(Welds.RightHip.C0,CFrame.new(1, -1, 0) * CFrame.Angles(math.rad(-20-4*math.sin(Sine/25-math.random(0.25,3))), math.rad(80), math.rad(0)), .7 / 3)
				Welds.LeftHip.C0 = Clerp(Welds.LeftHip.C0,CFrame.new(-1, -1 , 0) * CFrame.Angles(math.rad(-10-4*math.sin(Sine/25-math.random(-0.25,3))), math.rad(-80), math.rad(0)), .7 / 3)
				Welds.GunJoint.C0 = Clerp(Welds.GunJoint.C0,CFrame.new(.05,-1,-.15)*CFrame.Angles(math.rad(-106.3-.9*math.cos(Sine/12)),0,0),.25)
			end
			Welds.RightWing.C0 = Clerp(Welds.RightWing.C0,CFrame.new(.15,.5,.5)*CFrame.Angles(0,math.rad(105-25*math.cos(Sine/25)),0),.25)
			Welds.LeftWing.C0 = Clerp(Welds.LeftWing.C0,CFrame.new(-.15,.5,.5)*CFrame.Angles(0,math.rad(75+25*math.cos(Sine/25)),0),.25)
		elseif Mode == 7 then
			if Movement.Walking then
				Welds.RootJoint.C0 = Clerp(Welds.RootJoint.C0,Welds.Defaults.RootJoint.C0*CFrame.new(0,0,-.5*math.sin(Sine/50))*CFrame.Angles(math.rad(20),0,0),.25)
				Welds.Neck.C0 = Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0 * CFrame.new(0,0 ,0 + ((1) - 1)) * CFrame.Angles(math.rad(0+math.random(-1,1)),math.rad(0+math.random(-1,1)),math.rad(0+math.random(-1,1))),0.7/3)
				Welds.RightShoulder.C0 = Clerp(Welds.RightShoulder.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(140-4*math.sin(Sine/50)),0,math.rad(13))*Welds.Defaults.RightShoulder.C0,.25)
				Welds.LeftShoulder.C0 = Clerp(Welds.LeftShoulder.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(-25),0,math.rad(-10-10*math.sin(Sine/50)))*Welds.Defaults.LeftShoulder.C0,.25)
				Welds.RightHip.C0 = Clerp(Welds.RightHip.C0,CFrame.new(1,-1,-.01)*CFrame.Angles(math.rad(-40),math.rad(80),math.rad(10+10*math.sin(Sine/50))),.25)
				Welds.LeftHip.C0 = Clerp(Welds.LeftHip.C0,CFrame.new(-1,-1,-.01)*CFrame.Angles(math.rad(-30),math.rad(-80),math.rad(-10-10*math.sin(Sine/50))),.25)
				Welds.GunJoint.C0 = Clerp(Welds.GunJoint.C0,CFrame.new(.05,-1,-.15) * CFrame.Angles(math.rad(-90+math.random(-1,1)),math.rad(0+math.random(-1,1)),math.rad(0+math.random(-1,1))),1/2)
			else
				Welds.LeftShoulder.C0 = Clerp(Welds.LeftShoulder.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(20),0,math.rad(-10))*Welds.Defaults.LeftShoulder.C0,.25)
				Welds.RootJoint.C0 = Clerp(Welds.RootJoint.C0,Welds.Defaults.RootJoint.C0*CFrame.new(0,0,-.5*math.sin(Sine/50))*CFrame.Angles(math.rad(20),0,0),.25)
				Welds.Neck.C0 = Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0 * CFrame.new(0,0 ,0 + ((1) - 1)) * CFrame.Angles(math.rad(-50+math.random(-1,1)),math.rad(-30+math.random(-1,1)),math.rad(0+math.random(-1,1))),0.7/3)
				Welds.RightShoulder.C0 = Clerp(Welds.RightShoulder.C0,CFrame.new(1.5,0.5,0) * CFrame.Angles(math.rad(135 + 8.5 * math.cos(Sine/15)),math.rad(-15),math.rad(25)) * RIGHTSHOULDERC0,0.7/3)
				Welds.Neck.C0 = Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0*CFrame.new(0,0 ,0 + ((1) - 1)) * CFrame.Angles(math.rad(30+5*math.sin(Sine/50)),math.rad(0),math.rad(0)),0.7/3)
				Welds.RightHip.C0 = Clerp(Welds.RightHip.C0,CFrame.new(1,-1,-.01)*CFrame.Angles(math.rad(10),math.rad(80),math.rad(10*math.sin(Sine/50))),.25)
				Welds.LeftHip.C0 = Clerp(Welds.LeftHip.C0,CFrame.new(-1,-1,-.01)*CFrame.Angles(math.rad(20),math.rad(-80),math.rad(-10*math.sin(Sine/50))),.25)
				Welds.GunJoint.C0 = Clerp(Welds.GunJoint.C0,CFrame.new(.05,-1,-.15) * CFrame.Angles(math.rad(-90+math.random(-1,1)),math.rad(0+math.random(-1,1)),math.rad(0+math.random(-1,1))),1/2)
			end
			Welds.RightWing.C0 = Clerp(Welds.RightWing.C0,CFrame.new(.15,.5,.5)*CFrame.Angles(0,math.rad(105-25*math.cos(Sine/25)),0),.25)
			Welds.LeftWing.C0 = Clerp(Welds.LeftWing.C0,CFrame.new(-.15,.5,.5)*CFrame.Angles(0,math.rad(75+25*math.cos(Sine/25)),0),.25)
		elseif Mode == "Polish" then
			if Movement.Walking then
				Welds.RightWing.C0 = Clerp(Welds.RightWing.C0,CFrame.new(.15,.5,.5)*CFrame.Angles(0,math.rad(105-25*math.cos(Sine/25)),0),.25)
				Welds.LeftWing.C0 = Clerp(Welds.LeftWing.C0,CFrame.new(-.15,.5,.5)*CFrame.Angles(0,math.rad(75+25*math.cos(Sine/25)),0),.25)
				Welds.RootJoint.C0 = Clerp(Welds.RootJoint.C0,Welds.Defaults.RootJoint.C0*CFrame.new(0,0,0+.5*math.cos(Sine/15))*CFrame.Angles(math.rad(40),math.rad(-5*math.cos(Sine/30)),0),.25)
				Welds.Neck.C0 = Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0*CFrame.new(0,-.25,0)*CFrame.Angles(math.rad(-40),0,0),.25)
				Welds.RightShoulder.C0 = Clerp(Welds.RightShoulder.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(-45),0,math.rad(5+2*math.cos(Sine/19)))*Welds.Defaults.RightShoulder.C0,.25)
				Welds.LeftShoulder.C0 = Clerp(Welds.LeftShoulder.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(-45),0,math.rad(-5-2*math.cos(Sine/19)))*Welds.Defaults.LeftShoulder.C0,.25)
				Welds.RightHip.C0 = Clerp(Welds.RightHip.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-20+9*math.cos(Sine/74)),math.rad(80),0)*CFrame.Angles(math.rad(0+5*math.cos(Sine/37)),0,0),.25)
				Welds.LeftHip.C0 = Clerp(Welds.LeftHip.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-20-9*math.cos(Sine/54)),math.rad(-80),0)*CFrame.Angles(math.rad(-5*math.cos(Sine/41)),0,0),.25)
				Welds.GunJoint.C0 = Clerp(Welds.GunJoint.C0,CFrame.new(.05,-1,-.15) * CFrame.Angles(math.rad(-99),math.rad(0),math.rad(0)),1/2)
			else
				Welds.RightWing.C0 = Clerp(Welds.RightWing.C0,CFrame.new(.15,.5,.5)*CFrame.Angles(0,math.rad(105),0),.25)
				Welds.LeftWing.C0 = Clerp(Welds.LeftWing.C0,CFrame.new(-.15,.5,.5)*CFrame.Angles(0,math.rad(75),0),.25)
				Welds.Neck.C0 = Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0 * CF(0, 0, 0 + ((1) - 1)) * ANGLES(RAD(-2 - 2* SIN(Sine / 6)), RAD(0), RAD(0)), 0.8 / Animation_Speed)
				Welds.RightShoulder.C0 = Clerp(Welds.RightShoulder.C0, CF(1.5, 0.5, 0) * ANGLES(RAD(160), RAD(0), RAD(15-15* SIN(Sine / 12))) * RIGHTSHOULDERC0, 0.8 / Animation_Speed)
				Welds.LeftShoulder.C0 = Clerp(Welds.LeftShoulder.C0, CF(-1.5, 0.5, 0) * ANGLES(RAD(0), RAD(0), RAD(-15+15* SIN(Sine / 12))) * LEFTSHOULDERC0, 0.8 / Animation_Speed)
				Welds.RootJoint.C0 = Clerp(Welds.RootJoint.C0,Welds.Defaults.RootJoint.C0 * CF(0, 0, 0+0.1* SIN(Sine / 6)) * ANGLES(RAD(0), RAD(0), RAD(0)), 0.8 / Animation_Speed)
				Welds.RightHip.C0 = Clerp(Welds.RightHip.C0, CF(1 , -1-0.1* SIN(Sine / 6), 0) * ANGLES(RAD(0), RAD(90), RAD(0)) * ANGLES(RAD(-2+2* SIN(Sine / 6)), RAD(0), RAD(0)), 0.8 / Animation_Speed)
				Welds.LeftHip.C0 = Clerp(Welds.LeftHip.C0, CF(-1, -1-0.1* SIN(Sine / 6), 0) * ANGLES(RAD(0), RAD(-90), RAD(0)) * ANGLES(RAD(-2+2* SIN(Sine / 6)), RAD(0), RAD(0)), 0.8 / Animation_Speed)
				Welds.GunJoint.C0 = Clerp(Welds.GunJoint.C0,CFrame.new(.05,-1,-.15) * CFrame.Angles(math.rad(-90),math.rad(0),math.rad(0)),1/2)
			end
		elseif Mode == "Fave" then
			if Movement.Walking then
				Welds.GunJoint.C0 = Clerp(Welds.GunJoint.C0,CFrame.new(.05,-.5,-.15) * CFrame.Angles(math.rad(185),math.rad(0),math.rad(0)),1/2)	
				Welds.RootJoint.C0 = Clerp(Welds.RootJoint.C0,Welds.Defaults.RootJoint.C0 * CFrame.new(0,0,0),1)
				Welds.Neck.C0 = Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0 * CFrame.new(),1)
				Welds.RightShoulder.C0 = Clerp(Welds.RightShoulder.C0,CFrame.new(1.5,0.5,0) * rscp,1)
				Welds.LeftShoulder.C0 = Clerp(Welds.LeftShoulder.C0,CFrame.new(-1.3,0.7,0) * CFrame.Angles(math.rad(0),math.rad(0),math.rad(-135)) * lscp,1)
				Welds.RightHip.C0 = Clerp(Welds.RightHip.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0)),.25)
				Welds.LeftHip.C0 = Clerp(Welds.LeftHip.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(0),math.rad(0),math.rad(-25))*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0)),.25)
			else
				Welds.GunJoint.C0 = Clerp(Welds.GunJoint.C0,CFrame.new(.05,-.5,-.15) * CFrame.Angles(math.rad(185),math.rad(0),math.rad(0)),1/2)	
				Welds.RootJoint.C0 = Clerp(Welds.RootJoint.C0,Welds.Defaults.RootJoint.C0 * CFrame.new(0,0,0),1)
				Welds.Neck.C0 = Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0 * CFrame.new(),1)
				Welds.RightShoulder.C0 = Clerp(Welds.RightShoulder.C0,CFrame.new(1.5,0.5,0) * rscp,1)
				Welds.LeftShoulder.C0 = Clerp(Welds.LeftShoulder.C0,CFrame.new(-1.3,0.7,0) * CFrame.Angles(math.rad(0),math.rad(0),math.rad(-135)) * lscp,1)
				Welds.RightHip.C0 = Clerp(Welds.RightHip.C0,CFrame.new(1,-1,0)*CFrame.Angles(math.rad(0),math.rad(0),math.rad(0))*CFrame.Angles(math.rad(0),math.rad(90),math.rad(0)),.25)
				Welds.LeftHip.C0 = Clerp(Welds.LeftHip.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(0),math.rad(0),math.rad(-25))*CFrame.Angles(math.rad(0),math.rad(-90),math.rad(0)),.25)
			end
		end
		Welds.RightWing.C0 = Clerp(Welds.RightWing.C0,CFrame.new(.15,.5,.5)*CFrame.Angles(0,math.rad(105),0),.25)
		Welds.LeftWing.C0 = Clerp(Welds.LeftWing.C0,CFrame.new(-.15,.5,.5)*CFrame.Angles(0,math.rad(75),0),.25)
		Movement.CFrame = obamagaming.obunga(Movement.CFrame,Movement.PotentialCFrame,.1)
		Movement.CFrame = CFrame.new(obamagaming.obunga(Movement.CFrame,Movement.PotentialCFrame,.25).Position)*Movement.CFrame-Movement.CFrame.Position
		wait()	
	end
end))

local Event = makefakeevent()
local Remote = Event

local EventConnection = Event.OnServerEvent:Connect(function(v,Pass,Method,Things)
	if type(Method) == "string" and type(Things) == "table" then
		LastCall = tick()
		if Method == "Movement" then
			Movement.PotentialCFrame,Movement.Walking,Mouse.Hit = Things.CFrame,Things.Walking,Things.Hit
		elseif Method == "ReplaceCharacter" then
			for _,v in pairs(Character) do
				if typeof(v) == "Instance" then
					game:GetService("Debris"):AddItem(v,0)
				end
			end
		elseif Method == "ReplaceMusic" then
			game:GetService("Debris"):AddItem(MusicHolder,0)
			game:GetService("Debris"):AddItem(Music,0)
		elseif Method == "AntiFat" then
			AntiFat = Things.AntiFat
		elseif Method == "Polish" then
			if Mode ~= "Polish" then
				Mode = "Polish"
				MusicProps.SoundId = "rbxassetid://5971920694"
				MusicProps.Volume = 1
				Movement.HipHeight = 0
				Movement.WalkSpeed = 50
			else
				Mode = 0
				MusicProps.SoundId = "rbxassetid://2092660225"
				MusicProps.Volume = 1
				Movement.HipHeight = 3
				Movement.WalkSpeed = 50
			end
		elseif Method == "Fave" then
			if Mode ~= "Fave" then
				Mode = "Fave"
				MusicProps.SoundId = "rbxassetid://290182215"
				MusicProps.Volume = 1
				Movement.HipHeight = 0
				Movement.WalkSpeed = 50
			else
				Mode = 0
				MusicProps.SoundId = "rbxassetid://2092660225"
				MusicProps.Volume = 1
				Movement.HipHeight = 3
				Movement.WalkSpeed = 50
			end
		elseif Method == "SwitchMode" then
			Mode = Mode+1
			MusicStart = tick()
			if Mode == 0 then
				MusicProps.SoundId = "rbxassetid://2092660225"
				MusicProps.Volume = 1
				Movement.HipHeight = 3
				Movement.WalkSpeed = 50
			elseif Mode == 1 then
				MusicProps.SoundId = "rbxassetid://6207243296"
				MusicProps.Volume = 3
				Movement.HipHeight = 3
				Movement.WalkSpeed = 25
			elseif Mode == 2 then
				MusicProps.SoundId = "rbxassetid://481104377"
				MusicProps.Volume = 1.5
				Movement.HipHeight = 3
				Movement.WalkSpeed = 50
			elseif Mode == 3 then
				MusicProps.SoundId = "rbxassetid://2297862957"
				MusicProps.Volume = 1.5
				Movement.HipHeight = 3
				Movement.WalkSpeed = 50
			elseif Mode == 4 then
				MusicProps.SoundId = "rbxassetid://4185475912"
				MusicProps.Volume = 4
				Movement.HipHeight = 3
				Movement.WalkSpeed = 50
			elseif Mode == 5 then
				MusicProps.SoundId = "rbxassetid://5170646860"
				MusicProps.Volume = 2
				Movement.HipHeight = 0
				Movement.WalkSpeed = 16
			elseif Mode == 6 then
				MusicProps.SoundId = "rbxassetid://4557673096"
				MusicProps.Volume = 2
				Movement.HipHeight = 1
				Movement.WalkSpeed = 25
			elseif Mode == 7 then
				MusicProps.SoundId = "rbxassetid://6174456295"
				MusicProps.Volume = 2
				Movement.HipHeight = 2
				Movement.WalkSpeed = 35
			elseif Mode > 6 then
				Mode = 0
				MusicProps.SoundId = "rbxassetid://2092660225"
				MusicProps.Volume = 1
				Movement.HipHeight = 3
				Movement.WalkSpeed = 50
			end
		elseif Method == "PlaybackLoudness" then
			PlaybackLoudness = Things.PlaybackLoudness
		elseif Method == "Attack" and Mode >= 0 then
			if Things.Type == "ClickAttack" then
				task.spawn(function()
					local OldMode,WalkSpeed,AttackPosition = Mode,Movement.WalkSpeed,Mouse.Hit.Position
					Mode = -1
					Movement.WalkSpeed = 0
					coroutine.resume(coroutine.create(function()
						for _ = 1,20 do
							wait()
						end
						Mode,Movement.WalkSpeed = OldMode,WalkSpeed
					end))
					for i = .1,1,.1 do
						Welds.RootJoint.C0 = Clerp(Welds.RootJoint.C0,Welds.Defaults.RootJoint.C0*CFrame.new(0+.5*math.cos(Sine/50),0,-.5*math.sin(Sine/50))*CFrame.Angles(0,0,math.rad(30)),.25)
						Welds.Neck.C0 = Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0*CFrame.Angles(math.rad(15),0,math.rad(-30)),.25)
						Welds.RightShoulder.C0 = Clerp(Welds.RightShoulder.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(90),0,math.rad(30))*Welds.Defaults.RightShoulder.C0,.25)
						Welds.LeftShoulder.C0 = Clerp(Welds.LeftShoulder.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(30),0,0)*Welds.Defaults.LeftShoulder.C0,.25)
						Welds.RightHip.C0 = Clerp(Welds.RightHip.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-15+9*math.cos(Sine/74)),math.rad(80),0)*CFrame.Angles(math.rad(5*math.cos(Sine/37)),0,0),.25)
						Welds.LeftHip.C0 = Clerp(Welds.LeftHip.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-15-9*math.cos(Sine/54)),math.rad(-80),0)*CFrame.Angles(math.rad(-5*math.cos(Sine/41)),0,0),.25)
						Event:FireAllClients("SetPosition",{CFrame = CFrame.new(Movement.CFrame.Position,Vector3.new(AttackPosition.X,Movement.CFrame.Position.Y,AttackPosition.Z))})
						Movement.CFrame = Clerp(Movement.CFrame,CFrame.new(Movement.CFrame.Position,Vector3.new(AttackPosition.X,Movement.CFrame.Position.Y,AttackPosition.Z)),i)
						wait()
					end
					local IgnoreChar,DeadParts = {},{}
					local SoundHolder = Instance.new("Part",nil,{CFrame = Character.Hole2.CFrame})
					local Sound = Instance.new("Sound",SoundHolder,{SoundId = "rbxassetid://642890855",PlaybackSpeed = .65,Volume = 10,PlayOnRemove = true,Playing = true})
					SoundHolder.Parent = game:GetService(Services[math.random(1,#Services)])
					SoundHolder:Destroy()
					local SoundHolder = Instance.new("Part",nil,{Position = AttackPosition})
					local Sound = Instance.new("Sound",SoundHolder,{SoundId = "rbxassetid://821439273",PlaybackSpeed = .8,Volume = 10,PlayOnRemove = true,Playing = true})
					SoundHolder.Parent = game:GetService(Services[math.random(1,#Services)])
					SoundHolder:Destroy()
					for _,v in pairs(Character) do
						if typeof(v) == "Instance" then
							table.insert(IgnoreChar,v)
						end
					end
					local Parts = workspace:FindPartsInRegion3WithIgnoreList(Region3.new(AttackPosition-Vector3.new(4,4,4),AttackPosition+Vector3.new(4,4,4)),IgnoreChar,100)

					local PartKiller,PartsToKill = Instance.new("ViewportFrame",workspace,{Name = RandomString()}),{}
					for _,v in pairs(Parts) do
						local BiggestAxis = v.Size.X
						if v.Size.Y > BiggestAxis then
							BiggestAxis = v.Size.Y
						end
						if v.Size.Z > BiggestAxis then
							BiggestAxis = v.Size.Z
						end
						if (v.Name ~= "Base" and v.Name ~= "Baseplate") or BiggestAxis < 10 then
							v.Archivable = true
							table.insert(DeadParts,v:Clone())
							v.Archivable = false
							local SoundHolder = Instance.new("Part",nil,{CFrame = v.CFrame})
							local Sound = Instance.new("Sound",SoundHolder,{SoundId = "rbxassetid://2785493",Volume = 10,PlayOnRemove = true,Playing = true})
							SoundHolder.Parent = game:GetService(Services[math.random(1,#Services)])
							SoundHolder:Destroy()
							table.insert(PartsToKill,v)
						end
					end
					
					do
						local IgnoreChar,WorldModels,StartPosition,EndPosition = IgnoreChar,WorldModels,Character.Hole2.CFrame.Position, CFrame.new(AttackPosition).Position
						local function RandomString()
							return game:GetService("HttpService"):GenerateGUID(false)
						end
						local Instance_ = Instance.new
						local Instance = {}
						function Instance.new(ClassType,Parent,Properties)
							local NewInstance = Instance_(ClassType)
							if type(Properties) == "table" then
								for i,v in pairs(Properties) do
									NewInstance[i] = v
								end
							end
							if typeof(Parent) == "Instance" then
								NewInstance.Parent = Parent
							end
							return NewInstance
						end
						local Parts = workspace:FindPartsInRegion3WithIgnoreList(Region3.new(EndPosition-Vector3.new(4,4,4),EndPosition+Vector3.new(4,4,4)),IgnoreChar,100)
						local Lightning_,SegmentCount,Points = {},math.floor(math.clamp((StartPosition-EndPosition).Magnitude/3,3,133)+1.5),{}
						Points[1] = StartPosition
						for i = 2,SegmentCount do
							Points[i] = StartPosition+(EndPosition-StartPosition).Unit*i*(EndPosition-StartPosition).Magnitude/SegmentCount+(i < SegmentCount and Vector3.new(math.random(-3,3)/3,math.random(-3,3)/3,math.random(-3,3)/3) or Vector3.new())
							local Piece = Instance.new("Part",workspace,{Color = Color3.new(1,1,1),Shape = Enum.PartType.Ball,Material = Enum.Material.Neon,Name = RandomString(),Anchored = true,CanCollide = false,Size = Vector3.new(1,1,1),Position = Points[i]})
							table.insert(Lightning_,Piece)
							game:GetService("TweenService"):Create(Piece,TweenInfo.new(.5,Enum.EasingStyle.Linear),{Size = Vector3.new()}):Play()
							game:GetService("Debris"):AddItem(Piece,.5)
						end
						for i = 1,#Points do
							if i+1 <= #Points then
								local Piece = Instance.new("Part",workspace,{Color = Color3.new(1,1,1),Shape = Enum.PartType.Cylinder,Material = Enum.Material.Neon,Name = RandomString(),Anchored = true,CanCollide = false,Size = Vector3.new((Points[i]-Points[i+1]).Magnitude,1,1),CFrame = CFrame.new((Points[i]+Points[i+1])/2,Points[i])*CFrame.Angles(0,math.rad(90),0)})
								table.insert(Lightning_,Piece)
								game:GetService("TweenService"):Create(Piece,TweenInfo.new(.5,Enum.EasingStyle.Linear),{Size = Vector3.new(Piece.Size.X,0,0)}):Play()
								game:GetService("Debris"):AddItem(Piece,.5)
								if math.random(1,5) == 1 and #Points-i > 5 then
									local SegmentCount = math.random(1,7)
									local StartPosition,EndPosition,Points = Points[i],CFrame.new(Points[i],Points[i+1])*CFrame.Angles(math.rad(math.random(-9,9)*5),math.rad(math.random(-9,9)*5),math.rad(math.random(-9,9)*5))*CFrame.new(0,0,-SegmentCount*3).Position,{}
									Points[1] = StartPosition
									for i = 2,SegmentCount do
										Points[i] = StartPosition+(EndPosition-StartPosition).Unit*i*(EndPosition-StartPosition).Magnitude/SegmentCount+(i < SegmentCount and Vector3.new(math.random(-3,3)/3,math.random(-3,3)/3,math.random(-3,3)/3) or Vector3.new())
										local Piece = Instance.new("Part",workspace,{Color = Color3.new(1,1,1),Shape = Enum.PartType.Ball,Material = Enum.Material.Neon,Name = RandomString(),Anchored = true,CanCollide = false,Size = Vector3.new(1,1,1),Position = Points[i]})
										table.insert(Lightning_,Piece)
										game:GetService("TweenService"):Create(Piece,TweenInfo.new(.5,Enum.EasingStyle.Linear),{Size = Vector3.new()}):Play()
										game:GetService("Debris"):AddItem(Piece,.5)
									end
									for i = 1,#Points do
										if i+1 <= #Points then
											local Piece = Instance.new("Part",workspace,{Color = Color3.new(1,1,1),Shape = Enum.PartType.Cylinder,Material = Enum.Material.Neon,Name = RandomString(),Anchored = true,CanCollide = false,Size = Vector3.new((Points[i]-Points[i+1]).Magnitude,1,1),CFrame = CFrame.new((Points[i]+Points[i+1])/2,Points[i])*CFrame.Angles(0,math.rad(90),0)})
											table.insert(Lightning_,Piece)
											game:GetService("TweenService"):Create(Piece,TweenInfo.new(.5,Enum.EasingStyle.Linear),{Size = Vector3.new(Piece.Size.X,0,0)}):Play()
											game:GetService("Debris"):AddItem(Piece,.5)
											if math.random(1,5) == 1 then
												local SegmentCount = math.random(1,3)
												local StartPosition,EndPosition,Points = Points[i],CFrame.new(Points[i],Points[i+1])*CFrame.Angles(math.rad(math.random(-9,9)*5),math.rad(math.random(-9,9)*5),math.rad(math.random(-9,9)*5))*CFrame.new(0,0,-SegmentCount*3).Position,{}
												Points[1] = StartPosition
												for i = 2,SegmentCount do
													Points[i] = StartPosition+(EndPosition-StartPosition).Unit*i*(EndPosition-StartPosition).Magnitude/SegmentCount+(i < SegmentCount and Vector3.new(math.random(-3,3)/3,math.random(-3,3)/3,math.random(-3,3)/3) or Vector3.new())
													local Piece = Instance.new("Part",workspace,{Color = Color3.new(1,1,1),Shape = Enum.PartType.Ball,Material = Enum.Material.Neon,Name = RandomString(),Anchored = true,CanCollide = false,Size = Vector3.new(1,1,1),Position = Points[i]})
													table.insert(Lightning_,Piece)
													game:GetService("TweenService"):Create(Piece,TweenInfo.new(.5,Enum.EasingStyle.Linear),{Size = Vector3.new()}):Play()
													game:GetService("Debris"):AddItem(Piece,.5)
												end
												for i = 1,#Points do
													if i+1 <= #Points then
														local Piece = Instance.new("Part",workspace,{Color = Color3.new(1,1,1),Shape = Enum.PartType.Cylinder,Material = Enum.Material.Neon,Name = RandomString(),Anchored = true,CanCollide = false,Size = Vector3.new((Points[i]-Points[i+1]).Magnitude,1,1),CFrame = CFrame.new((Points[i]+Points[i+1])/2,Points[i])*CFrame.Angles(0,math.rad(90),0)})
														table.insert(Lightning_,Piece)
														game:GetService("TweenService"):Create(Piece,TweenInfo.new(.5,Enum.EasingStyle.Linear),{Size = Vector3.new(Piece.Size.X,0,0)}):Play()
														game:GetService("Debris"):AddItem(Piece,.5)
													end
												end
											end
										end
									end
								end
							end
						end
					end
					
					PartKiller:Destroy()
					for _ = 1,10 do
						Welds.RootJoint.C0 = Clerp(Welds.RootJoint.C0,Welds.Defaults.RootJoint.C0*CFrame.new(0+.5*math.cos(Sine/50),0,-.5*math.sin(Sine/50))*CFrame.Angles(0,0,math.rad(30)),.25)
						Welds.Neck.C0 = Clerp(Welds.Neck.C0,Welds.Defaults.Neck.C0*CFrame.Angles(math.rad(10),0,math.rad(-60)),.25)
						Welds.RightShoulder.C0 = Clerp(Welds.RightShoulder.C0,CFrame.new(1.5,.5,0)*CFrame.Angles(math.rad(160),math.rad(-20),math.rad(60))*Welds.Defaults.RightShoulder.C0,.25)
						Welds.LeftShoulder.C0 = Clerp(Welds.LeftShoulder.C0,CFrame.new(-1.5,.5,0)*CFrame.Angles(math.rad(40),math.rad(5),math.rad(5))*Welds.Defaults.LeftShoulder.C0,.25)
						Welds.RightHip.C0 = Clerp(Welds.RightHip.C0,CFrame.new(1,-.5,-.5)*CFrame.Angles(math.rad(-15+9*math.cos(Sine/74)),math.rad(80),0)*CFrame.Angles(math.rad(5*math.cos(Sine/37)),0,0),.25)
						Welds.LeftHip.C0 = Clerp(Welds.LeftHip.C0,CFrame.new(-1,-1,0)*CFrame.Angles(math.rad(-15-9*math.cos(Sine/54)),math.rad(-80),0)*CFrame.Angles(math.rad(-5*math.cos(Sine/41)),0,0),.25)
						Event:FireAllClients("SetPosition",{CFrame = CFrame.new(Movement.CFrame.Position,Vector3.new(AttackPosition.X,Movement.CFrame.Position.Y,AttackPosition.Z))})
						Movement.CFrame = CFrame.new(Movement.CFrame.Position,Vector3.new(AttackPosition.X,Movement.CFrame.Position.Y,AttackPosition.Z))
						wait()
					end
					Mode = OldMode
				end)
			elseif Things.Type == "GroundShards" then
				local OldMode,Size,StudsAway = Mode,Vector3.new(2.5,9,2.5),-4
				for i = 1,50 do
					local Shard = Instance.new("Shard",workspace,{Material = Enum.Material.Glass,Reflectance = -1,CFrame = Movement.PotentialCFrame*CFrame.new(math.random(-2,2)/4,-3-Size.Y/2,StudsAway+math.random(-2,2)/4)*CFrame.fromEulerAnglesXYZ(100,math.random(0,180),.4),Anchored = true,CanCollide = true,Size = Size})
					Shard.Mesh.Scale = Shard.Size
					game:GetService("Debris"):AddItem(Shard,3)
					game:GetService("TweenService"):Create(Shard,TweenInfo.new(.3),{CFrame = Shard.CFrame*CFrame.new(0,Size.Y,0)}):Play()
					game:GetService("TweenService"):Create(Shard,TweenInfo.new(1,Enum.EasingStyle.Linear,Enum.EasingDirection.In,0,false,2),{Transparency = 1}):Play()
					StudsAway = StudsAway-2
					Size = Vector3.new(2.5,9,2.5)*(1+i/10)
					wait()
				end
			end
		end
	end
end)

function Change(instance : Instance, props : table)
	props = props or {}
	table.foreach(props, function(i,v) instance[i] = v end)
end

function Create(class : string, props)
	local part = Instance.new(class)
	Change(part,props)
	return part
end

function Remove(item, time)
	if string.lower(typeof(item)) == "instance" then
		game:GetService("Debris"):AddItem(item, time or 0)
	elseif string.lower(typeof(item)) == "table" then
		table.foreach(item, function(i,v) game:GetService("Debris"):AddItem(v, time or 0) end)
	end
end

local realchar = workspace.xtessy22

Remove({realchar:FindFirstChild("Animate"), realchar.Humanoid:FindFirstChildOfClass("Animator")})

local gundata = {}

function searchHat(obj,hatid,searchtype)
	local searchtype = searchtype or "mesh"

	local rare = game:GetObjects(`rbxassetid://{hatid}`)[1]
	local rareHandle = rare:FindFirstChildOfClass("Part") or rare:FindFirstChildOfClass("MeshPart")
	local isMeshPart = rareHandle:IsA("MeshPart")
	local rareMesh = not isMeshPart and rareHandle:FindFirstChildOfClass("SpecialMesh") or rareHandle

	if searchtype == "mesh" then
		if rareMesh then
			local meshid = rareMesh. MeshId
			local texture = (rareMesh:IsA("MeshPart") and rareMesh.TextureID or rareMesh.TextureId)
			for i,v in obj:GetChildren() do
				if v:IsA("Accessory") then
					local mesh = v:FindFirstChildOfClass("MeshPart") or v:FindFirstChildOfClass("Part"):FindFirstChildOfClass("SpecialMesh")
					
					local mid = mesh.MeshId
					local tid = (mesh:IsA("MeshPart") and mesh.TextureID or mesh.TextureId)
					
					if mid:find(meshid) and tid:find(texture) then
						return v
					end
				end
			end
		end
	elseif searchtype == "name" then
		for i,v in obj:GetChildren() do
			if v:IsA("Accessory") then
				if v.Name == rare.Name then
					return v
				end
			end
		end
	end
end

function clientalign(p0,p1,pos,orientation)
	local weld = Instance.new("Weld",p0)
	local attachment = Instance.new("Attachment",p0)

	attachment.Position = pos
	attachment.Orientation = orientation

	weld.Part0 = p0
	weld.Part1 = p1
	weld.C0 = attachment.CFrame

	local con = attachment:GetPropertyChangedSignal("CFrame"):Connect(function()
		weld.C0 = attachment.CFrame
	end)

	local dead
	dead = attachment.AncestryChanged:Connect(function()
		if not attachment or not game:IsDescendantOf(attachment) then
			dead:Disconnect()
			con:Disconnect()
			return
		end
	end)
end

do
	local GunBase = Instance.new("Part")
	GunBase.Name = "GunBase"
	GunBase.CFrame = CFrame.new(119.68231201171875, 1233.0218505859375, 232.19837951660156)
	GunBase.Color = Color3.fromRGB(0, 0, 0)
	GunBase.Reflectance = -1
	GunBase.Material = Enum.Material.Glass
	GunBase.Size = Vector3.new(9.361000061035156, 8.616999626159668, 1.4739999771118164)
	GunBase.Anchored = false
	
	GunBase.Transparency = .5

	local Mesh = Instance.new("SpecialMesh")
	Mesh.Scale = Vector3.new(2.0078208446502686, 2.007944345474243, 2.0072591304779053)
	Mesh.MeshId = "rbxassetid://6080721391"
	Mesh.MeshType = Enum.MeshType.FileMesh
	Mesh.Parent = GunBase
	
	gundata[1] = GunBase
end

for i,v in gundata do
	v.Parent = realchar
	v.CanCollide = false
end

do
	local topSection = searchHat(realchar,"116940095199813")
	local bottomSection = searchHat(realchar,"117311153426168")
	
	if topSection then
		topSection.Handle:BreakJoints()
		clientalign(gundata[1],topSection.Handle,Vector3.new(-1.9, -1.7, 0),Vector3.new(0, -180, -45))
	end
	
	if bottomSection then
		bottomSection.Handle:BreakJoints()
		clientalign(gundata[1],bottomSection.Handle,Vector3.new(2.03, 1.89, 0),Vector3.new(0, -180, -45))
	end
end

local Joints = {} do
	local Character = realchar
	local Torso, RootPart, RightArm, LeftArm, RightLeg, LeftLeg, Head = Character.Torso, Character.HumanoidRootPart, Character["Right Arm"], Character["Left Arm"], Character["Right Leg"], Character["Left Leg"], Character.Head
	local Humanoid = Character:FindFirstChildOfClass("Humanoid")
	
	local cf = {n = CFrame.new, a = function(_1,_2,_3,norad) if not norad then return CFrame.Angles(math.rad(_1),math.rad(_2),math.rad(_3)) else return CFrame.Angles(_1,_2,_3) end end; r = function(min,max) return CFrame.Angles(math.rad(math.random(min,max)),math.rad(math.random(min,max)),math.rad(math.random(min,max))) end;}
	local cos, sin, rad, cotan = math.cos, math.sin, math.rad, function(e) return math.sin(e/2)*math.cos(e/2) end
	local sine = 0
	
	Joints = {
		Torso = {Joint = Create("Motor6D", {Name = "RootJoint", Parent = RootPart, Part0 = RootPart, Part1 = Torso, C0 = cf.n(), C1 = cf.n()})};
		Head = {Joint = Create("Motor6D", {Name = "Neck", Parent = Torso, Part0 = Torso, Part1 = Head, C0 = cf.n(), C1 = cf.n()})};
		RightArm = {Joint = Create("Motor6D", {Name = "RightShoulder", Parent = Torso, Part0 = Torso, Part1 = RightArm, C0 = cf.n(), C1 = cf.n()})};
		LeftArm = {Joint = Create("Motor6D", {Name = "LeftShoulder", Parent = Torso, Part0 = Torso, Part1 = LeftArm, C0 = cf.n(), C1 = cf.n()})};
		RightLeg = {Joint = Create("Motor6D", {Name = "RightHip", Parent = Torso, Part0 = Torso, Part1 = RightLeg, C0 = cf.n(), C1 = cf.n()})};
		LeftLeg = {Joint = Create("Motor6D", {Name = "LeftHip", Parent = Torso, Part0 = Torso, Part1 = LeftLeg, C0 = cf.n(), C1 = cf.n()})};
		Gun = {Joint = Create("Motor6D", {Name = "Gun", Parent = RightArm, Part0 = RightArm, Part1 = gundata[1], C0 = cf.n(), C1 = cf.n()})};
	}

	table.foreach(Joints, function(i,v) v.Default = v.Joint.C0 end)
end

local frhipheight = Movement.HipHeight
local MainLoop = game:GetService("RunService").Heartbeat:Connect(function(s)
	frhipheight = Movement.HipHeight
	tf = tf+s
	for _ = 1,tf/fr do
		Sine = Sine+1
		HBevent:Fire()
		tf = tf-fr
	end
	game:GetService("SoundService").DopplerScale = 0
	
	if not MusicHolder or not MusicHolder:IsDescendantOf(game) or not table.find(Services,MusicHolder.Parent.ClassName) or MusicHolder.CFrame ~= CFrames.MusicHolder then

	end

	for i,v in pairs(MusicProps) do

	end

	Character.HumanoidRootPart.CFrame = CFrame.new(0,Movement.HipHeight,0)*Movement.CFrame
	CFrames.Torso = UpdateWeld(Welds.RootJoint,Character.Torso,Character.HumanoidRootPart.CFrame)
	CFrames.LeftArm = UpdateWeld(Welds.LeftShoulder,Character.LeftArm,CFrames.Torso)
	CFrames.RightLeg = UpdateWeld(Welds.RightHip,Character.RightLeg,CFrames.Torso)
	CFrames.LeftLeg = UpdateWeld(Welds.LeftHip,Character.LeftLeg,CFrames.Torso)
	CFrames.RightWing = UpdateWeld(Welds.RightWing,Character.RightWing,CFrames.Torso)
	CFrames.LeftWing = UpdateWeld(Welds.LeftWing,Character.LeftWing,CFrames.Torso)
	CFrames.RightArm = UpdateWeld(Welds.RightShoulder,Character.RightArm,CFrames.Torso)
	CFrames.Head = UpdateWeld(Welds.Neck,Character.Head,CFrames.Torso)
	CFrames.HeadGlow = UpdateWeld(Welds.None,Character.HeadGlow,CFrames.Head)
	CFrames.Hair = UpdateWeld(Welds.Hair,Character.Hair,CFrames.Head)
	CFrames.Head = UpdateWeld({C0 = CFrame.new()*CFrame.Angles(math.rad(-90),0,0),C1 = CFrame.new()},Character.Head,CFrames.Head)
	Character.GunHandle.CFrame = UpdateWeld(Welds.GunJoint,Character.GunHandle,CFrames.RightArm)
	CFrames.GunBase = UpdateWeld(Welds.GunBase,Character.GunBase,Character.GunHandle.CFrame)
	CFrames.GunGlow = UpdateWeld(Welds.GunGlow,Character.GunGlow,Character.GunHandle.CFrame)
	Character.Hole.CFrame = UpdateWeld(Welds.Hole,Character.Hole,Character.GunHandle.CFrame)
	Character.Hole2.CFrame = UpdateWeld(Welds.Hole2,Character.Hole2,Character.GunHandle.CFrame)
	CFrames.GunAdditions = UpdateWeld(Welds.GunAdditions,Character.GunAdditions,Character.GunHandle.CFrame)
	CFrames.MusicHolder = UpdateWeld({C0 = CFrame.new(0,1.5,0),C1 = CFrame.new()},MusicHolder,Character.HumanoidRootPart.CFrame)
	for _,v in pairs(Character) do
		if typeof(v) == "Instance" then
			--v.CFrame = CFrame.new(0,2.1e9,0)
		end
	end
	--Part0*(Weld.C0*Weld.C1:Inverse())
	Joints.Gun.Joint.C0 = (Welds.GunJoint.C0)*(Welds.GunBase.C0)
	--Joints.Gun.Joint.C1 = Welds.GunJoint.C1
	--gundata[1].CFrame = UpdateWeld(Welds.GunBase,Character.GunBase,Character.GunHandle.CFrame)
	
	for i,v in Joints do
		if v.Joint and Welds[v.Joint.Name] then
			v.Joint.C0 = Welds[v.Joint.Name].C0*Welds[v.Joint.Name].C1:Inverse()
			--v.Joint.C1 = CFrame.identity
		end
	end
	
--	MusicHolder.CFrame = CFrame.new()
	--Event:FireAllClients("SetCharacter",{Character = Character,MusicHolder = MusicHolder,Music = Music,WalkSpeed = Movement.WalkSpeed})
end)

do
	game:GetService("RunService").RenderStepped:Wait()

	local Movement,Trottle,RayProperties,CameraPart,Remote,LastFrame,Character,RemoteKey,Mouse,MusicHolder,Music,WorldModels = {CFrame = CFrame.new(0,100,0),PotentialCFrame = CFrame.new(0,100,0),WalkSpeed = 50},1,RaycastParams.new(),Instance.new("Part",game),Remote,tick(),nil,script.Name,game:GetService("Players").LocalPlayer:GetMouse(),nil,nil,{}
	RayProperties.FilterType = Enum.RaycastFilterType.Blacklist
	RayProperties.RespectCanCollide = true
	
	CameraPart.CanCollide = false

	RemoteKey = "lol"

	local function RandomString(Length)
		return game:GetService("HttpService"):GenerateGUID(false)
	end
	local RealPos = Instance.new("SelectionSphere")
	RealPos.Name = RandomString()
	RealPos.Color3 = Color3.new()
	RealPos.Transparency = 42398474823947
	RealPos.Adornee = nil
	RealPos.Parent = workspace
	local function MoveCharacter(X,Z)
		Movement.PotentialCFrame = Movement.PotentialCFrame*CFrame.new(X,0,Z)
	end
	local function KeyDown(Key)
		return not game:GetService("UserInputService"):GetFocusedTextBox() and game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode[Key]) or false
	end
	Mouse.KeyDown:Connect(function(Key)
		if Key == "f" then
			Movement.Flying = not Movement.Flying
			local LookVector = Movement.CFrame.LookVector
			Movement.CFrame = CFrame.new(Movement.CFrame.Position,Movement.CFrame.Position+Vector3.new(LookVector.X,0,LookVector.Z))
		elseif Key == "m" then
			Remote:FireServer(RemoteKey,"SwitchMode",{})
		elseif Key == "t" then
			Remote:FireServer(RemoteKey,"Polish",{})
		elseif Key == "y" then
			Remote:FireServer(RemoteKey,"Fave",{})
		elseif Key == "z" then
			Remote:FireServer(RemoteKey,"Attack",{Type = "GroundShards"})
		end
	end)
	Mouse.Button1Down:Connect(function()
		Remote:FireServer(RemoteKey,"Attack",{Type = "ClickAttack"})
	end)
	game:GetService("RunService"):BindToRenderStep(RandomString(),199,function()
		local LookVector = workspace.CurrentCamera.CFrame.LookVector
		if not Movement.Flying then
			local Closest,Rays,Ray_ = math.huge,{},nil
			table.insert(Rays,workspace:Raycast(Movement.CFrame.Position-Vector3.new(0,1,0),Vector3.new(0,-9e9,0),RayProperties))
			for _,v in pairs(Rays) do
				local Magnitude = (Movement.CFrame.Position-v.Position).Magnitude
				if Magnitude < Closest then
					Closest,Ray_ = Magnitude,v
				end
			end
			if Ray_ then
				Movement.CFrame = CFrame.new(0,(Ray_.Position.Y-Movement.CFrame.Y)+3,0)*Movement.CFrame
			else
				local Base = nil
				for i,v in pairs(workspace:GetDescendants()) do
					if v:IsA("SpawnLocation") then
						Base = v
						break
					end
				end
				if Base then
					Movement.CFrame = CFrame.new(Base.Position)*CFrame.new(0,(Base.Size.Y/2)+3,0)*Movement.CFrame-Movement.CFrame.Position
				else
					Movement.CFrame = CFrame.new(0,100,0)*Movement.CFrame-Movement.CFrame.Position
				end
			end
		end
		local OldCFrame = Movement.CFrame
		if Movement.Flying then
			Movement.PotentialCFrame = CFrame.new(Movement.CFrame.Position,Movement.CFrame.Position+LookVector)
		else
			Movement.PotentialCFrame = CFrame.new(Movement.CFrame.Position,Vector3.new(Movement.CFrame.X+LookVector.X,Movement.CFrame.Y,Movement.CFrame.Z+LookVector.Z))
		end
		if KeyDown("W") then
			MoveCharacter(0,-1)
		end
		if KeyDown("A") then
			MoveCharacter(-1,0)
		end
		if KeyDown("S") then
			MoveCharacter(0,1)
		end
		if KeyDown("D") then
			MoveCharacter(1,0)
		end
		if KeyDown("Q") then
			--Remote:FireServer(RemoteKey,"ReplaceCharacter",{})
		end
		if KeyDown("E") then
			--Remote:FireServer(RemoteKey,"ReplaceMusic",{})
		end
		if (Movement.PotentialCFrame.X ~= OldCFrame.X or Movement.PotentialCFrame.Z ~= OldCFrame.Z) then
			Movement.Walking = true
			Movement.CFrame = CFrame.new(Movement.CFrame.Position,Movement.PotentialCFrame.Position)*CFrame.new(0,0,(tick()-LastFrame)*-Movement.WalkSpeed)
		else
			Movement.Walking = false
		end
		
		CameraPart.Anchored = true
		CameraPart.CFrame = CFrame.new(0,-2.25,0)*Movement.CFrame
		LookVector = workspace.CurrentCamera.CFrame.LookVector
		if game:GetService("UserInputService").MouseBehavior == Enum.MouseBehavior.LockCenter then
			if Movement.Flying then
				Movement.CFrame = CFrame.new(Movement.CFrame.Position,Movement.CFrame.Position+LookVector)
			else
				Movement.CFrame = CFrame.new(Movement.CFrame.Position,Vector3.new(Movement.CFrame.X+LookVector.X,Movement.CFrame.Y,Movement.CFrame.Z+LookVector.Z))
			end
		end
		Remote:FireServer(RemoteKey,"Movement",{CFrame = Movement.CFrame,Walking = Movement.Walking,Hit = Mouse.Hit})
		Remote:FireServer(RemoteKey,"PlaybackLoudness",{PlaybackLoudness = 0,Hit = Mouse.Hit})
		LastFrame = tick()
		
		Player.Character.HumanoidRootPart.Anchored = true
		Player.Character.HumanoidRootPart.CFrame = Clerp(Player.Character.HumanoidRootPart.CFrame,CFrame.new(0,frhipheight,0)*Movement.CFrame,1/2)
		RayProperties.FilterDescendantsInstances = {Player.Character}
	end)
	local function ConnectEvent(Event_)
		local EventConnect = Event_.OnClientEvent:Connect(function(Method,Things)
			if type(Method) == "string" and type(Things) == "table" then
				if Method == "SetCharacter" then
					Character = Things.Character
					local RayCharacter = {}
					for _,v in pairs(Character) do
						if typeof(v) == "Instance" then
							table.insert(RayCharacter,v)
						end
					end
				
					MusicHolder = Things.MusicHolder
					Music = Things.Music
					Movement.WalkSpeed = Things.WalkSpeed
				elseif Method == "SetPosition" then
					Movement.CFrame = Things.CFrame
				end
			end
		end)
	end

	ConnectEvent(Remote)
end

local PlayerRemoving

task.spawn(error,"lcv2 slop ran without issues. OP!")
SendMessage("["..Psheudonym.."]: ","Lightning Cannon v2, by "..CreatorName)